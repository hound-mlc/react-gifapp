{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categorias","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","categoria","a","fetch","encodeURI","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","key","GifExpertApp","i","ReactDOM","render","document","getElementById"],"mappings":"6LAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAgB5C,OACI,oCACI,0BAAMC,SAVO,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,OAOV,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAlBU,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,aCNlBG,EAAc,SAAC,GAAqB,EAApBC,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IACpC,OACI,yBAAKC,UAAU,8CACX,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,K,uBCNHK,EAAO,uCAAG,WAAMC,GAAN,qBAAAC,EAAA,4DACP,yFADO,SAEAC,MAAMP,4FAAUQ,UAAUH,IAF1B,cAEbI,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAKc,EAAIC,OAAOC,iBAAiBhB,QARtB,kBAYZY,GAZY,4CAAH,sDCMPK,EAAU,SAAC,GAAiB,IAAhBZ,EAAe,EAAfA,UAAe,ECHZ,SAACA,GAAe,IAAD,EACbrB,mBAAS,CAC/B2B,KAAM,GACNO,SAAS,IAH0B,mBAChCC,EADgC,KACzBC,EADyB,KAYvC,OANAC,qBAAW,WACPjB,EAAQC,GAAWiB,MAAK,SAAAP,GACpBK,EAAS,CAACT,KAAMI,EAAQG,SAAS,SAEtC,CAACb,IAEGc,EDPyBI,CAAalB,GAAhCU,EAFuB,EAE7BJ,KAAcO,EAFe,EAEfA,QAErB,OACI,oCACI,wBAAIjB,UAAU,yCAAyCI,GACtDa,GAAW,uBAAGjB,UAAU,qCAAb,WACV,yBAAKA,UAAU,aAEXc,EAAOF,KAAI,SAAAC,GACT,OAAO,kBAAC,EAAD,eAAaU,IAAKV,EAAIhB,IAAQgB,UEb5CW,EAAe,WAAO,IAAD,EAEMzC,mBAAS,CAAC,cAFhB,mBAEvBQ,EAFuB,KAEXT,EAFW,KAI9B,OACI,oCACA,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAEQS,EAAWqB,KAAI,SAACR,EAAUqB,GAAX,OACX,kBAAC,EAAD,CACIrB,UAAWA,EACXmB,IAAKnB,U,MCb7BsB,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.db5c207f.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategorias}) => {\r\n\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2){\r\n            setCategorias(categorias => [inputValue, ...categorias]);\r\n            setInputValue(\"\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit}>\r\n                <input \r\n                    type=\"text\"\r\n                    value={inputValue}\r\n                    onChange={handleInputChange}\r\n                />\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInDown\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","export const getGifs = async(categoria) => {\r\n    const url = 'https://api.giphy.com/v1/gifs/search?api_key=etEYhcHOBJ1p9JCCNw5weNKfm5STFb74&limit=10'\r\n    const resp = await fetch(url+\"&q=\"+encodeURI(categoria));\r\n    const {data} = await resp.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n//\r\n\r\nexport const GifGrid = ({categoria}) => {\r\n\r\n    const {data: images, loading} = useFetchGifs(categoria);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeInDown\">{categoria}</h3>\r\n            {loading && <p className=\"animate__animated animate__bounce\">Loading</p>}\r\n            { <div className=\"card-grid\">\r\n                \r\n                { images.map(img => {\r\n                    return <GifGridItem key={img.id} {...img}/>\r\n                }) }\r\n            </div> }\r\n        </>\r\n    )\r\n}\r\n\r\nGifGrid.propTypes = {\r\n    categoria: PropTypes.string.isRequired\r\n}","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (categoria) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( ()=> {\r\n        getGifs(categoria).then(images =>{\r\n            setState({data: images, loading: false});\r\n        })\r\n    }, [categoria]);\r\n\r\n    return state;\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categorias, setCategorias] = useState(['One Piece']);\r\n\r\n    return (\r\n        <>\r\n        <h2>GifExpertApp</h2>\r\n        <AddCategory setCategorias={setCategorias}/>\r\n        <hr/>\r\n\r\n        <ol>\r\n            {\r\n                categorias.map((categoria,i) => (\r\n                    <GifGrid \r\n                        categoria={categoria}\r\n                        key={categoria}    \r\n                    />\r\n                ))\r\n            }\r\n        </ol>\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {GifExpertApp} from './GifExpertApp';\r\n\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n    <GifExpertApp />,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}